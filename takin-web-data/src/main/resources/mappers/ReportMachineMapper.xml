<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.shulie.takin.web.data.mapper.mysql.ReportMachineMapper">
    <resultMap id="BaseResultMap" type="io.shulie.takin.web.data.model.mysql.ReportMachineEntity">
        <!--@mbg.generated-->
        <!--@Table t_report_machine-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="report_id" jdbcType="BIGINT" property="reportId"/>
        <result column="application_name" jdbcType="VARCHAR" property="applicationName"/>
        <result column="machine_ip" jdbcType="VARCHAR" property="machineIp"/>
        <result column="agent_id" jdbcType="VARCHAR" property="agentId"/>
        <result column="machine_base_config" jdbcType="VARCHAR" property="machineBaseConfig"/>
        <result column="machine_tps_target_config" jdbcType="LONGVARCHAR" property="machineTpsTargetConfig"/>
        <result column="risk_value" jdbcType="DECIMAL" property="riskValue"/>
        <result column="risk_flag" jdbcType="TINYINT" property="riskFlag"/>
        <result column="risk_content" jdbcType="VARCHAR" property="riskContent"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, report_id, application_name, machine_ip, agent_id, machine_base_config, machine_tps_target_config,
        risk_value, risk_flag, risk_content
    </sql>
    <insert id="insertOrUpdate">
        insert into t_report_machine (report_id, application_name,
                                      machine_ip, agent_id, machine_base_config, risk_value,
                                      risk_flag, risk_content, machine_tps_target_config,tenant_id,env_code)
        values (
                   #{reportId,jdbcType=BIGINT}, #{applicationName,jdbcType=VARCHAR},
                   #{machineIp,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR}, #{machineBaseConfig,jdbcType=VARCHAR},
                   #{riskValue,jdbcType=DECIMAL},#{riskFlag,jdbcType=TINYINT}, #{riskContent,jdbcType=VARCHAR},
                   #{machineTpsTargetConfig,jdbcType=LONGVARCHAR},#{tenantId,jdbcType=BIGINT},#{envCode,jdbcType=VARCHAR}
               )
            on duplicate key update machine_base_config=#{machineBaseConfig,jdbcType=VARCHAR},
                                 agent_id=#{agentId,jdbcType=VARCHAR},
                                 risk_value=#{riskValue,jdbcType=DECIMAL},
                                 tenant_id=#{tenantId,jdbcType=BIGINT},
                                 env_code=#{envCode,jdbcType=VARCHAR}
    </insert>

    <select id="selectCountByReport" resultType="java.util.Map">
        select count(id)      as `count`,
               sum(risk_flag) as `riskSum`,
               application_name
        from t_report_machine
        where report_id = #{reportId,jdbcType=BIGINT}
        group by application_name
    </select>

    <update id="updateTpsTargetConfig">
        update t_report_machine
        set machine_tps_target_config = #{machineTpsTargetConfig,jdbcType=LONGVARCHAR}
        where report_id = #{reportId,jdbcType=BIGINT}
          and application_name = #{applicationName,jdbcType=VARCHAR}
          and machine_ip = #{machineIp,jdbcType=VARCHAR}
    </update>


    <update id="updateRiskContent" >
        update t_report_machine
        <set>
            <if test="riskFlag != null">
                risk_flag = #{riskFlag,jdbcType=TINYINT},
            </if>
            <if test="riskValue != null">
                risk_value  = #{riskValue,jdbcType=DECIMAL},
            </if>
            <if test="riskContent != null">
                risk_content = #{riskContent,jdbcType=VARCHAR}
            </if>
        </set>
        where report_id = #{reportId,jdbcType=BIGINT}
          and application_name = #{applicationName,jdbcType=VARCHAR}
          and machine_ip = #{machineIp,jdbcType=VARCHAR}
    </update>


</mapper>
